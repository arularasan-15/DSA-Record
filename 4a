#include <stdio.h> 
#include <stdlib.h>
#define MAX 100 
typedef struct {
int items[MAX];
int top;
} Stack;
void initialize(Stack *s) {
s->top = -1;
}
int isEmpty(Stack *s) {
return s->top == -1;
}
int isFull(Stack *s) {
return s->top == MAX - 1;
}
void push(Stack *s, int newItem) {
if (isFull(s)) {
printf("Stack is full. Cannot push %d\n", newItem); return;
}
s->items[++(s->top)] = newItem;
}
int pop(Stack *s) {
if (isEmpty(s)) {
printf("Stack is empty. Cannot pop\n"); return -1;
}
return s->items[(s->top)--];
}
int peek(Stack *s) {
if (isEmpty(s)) {
printf("Stack is empty. Cannot peek\n"); return -1;
}
return s->items[s->top];
}
int main() { Stack s; initialize(&s);
push(&s, 10);
push(&s, 20);
push(&s, 30);
push(&s, 40);
printf("Top element: %d\n", peek(&s)); printf("Popped element: %d\n", pop(&s)); printf("Top element after pop: %d\n", peek(&s));
return 0;
}
